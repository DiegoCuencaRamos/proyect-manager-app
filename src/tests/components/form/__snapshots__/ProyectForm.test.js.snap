// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render Proyect Form with empty values 1`] = `
<section>
  <div
    className="container"
  >
    <form
      className="form"
      onSubmit={[Function]}
    >
      <div
        className="form__wrapper"
      >
        <input
          className="form__item--name"
          onChange={[Function]}
          placeholder="Name"
          required={true}
          type="text"
          value=""
        />
        <select
          className="form__item--status"
          onChange={[Function]}
          required={true}
          style={
            Object {
              "flexBasis": "48%",
              "marginRight": "4%",
            }
          }
          value=""
        >
          <option
            defaultValue={true}
            value=""
          >
            Select status
          </option>
          <option
            value="todo"
          >
            To do
          </option>
          <option
            value="doing"
          >
            Doing
          </option>
          <option
            value="done"
          >
            Done
          </option>
        </select>
        <input
          className="form__item--invoice"
          onChange={[Function]}
          placeholder="Invoice"
          type="number"
          value=""
        />
        <withStyles(DateRangePicker)
          anchorDirection="left"
          appendToBody={false}
          block={false}
          calendarInfoPosition="bottom"
          customArrowIcon={null}
          customCloseIcon={null}
          customInputIcon={null}
          dayPickerNavigationInlineStyles={null}
          daySize={39}
          disableScroll={false}
          disabled={false}
          displayFormat={[Function]}
          enableOutsideDays={false}
          endDate={null}
          endDateId="mock-id-2"
          endDatePlaceholderText="End Date"
          firstDayOfWeek={null}
          focusedInput={null}
          hideKeyboardShortcutsPanel={false}
          horizontalMargin={0}
          initialVisibleMonth={null}
          inputIconPosition="before"
          isDayBlocked={[Function]}
          isDayHighlighted={[Function]}
          isOutsideRange={[Function]}
          isRTL={false}
          keepFocusOnInput={false}
          keepOpenOnDateSelect={false}
          minimumNights={1}
          monthFormat="MMMM YYYY"
          navNext={null}
          navPosition="navPositionTop"
          navPrev={null}
          noBorder={false}
          numberOfMonths={1}
          onClose={[Function]}
          onDatesChange={[Function]}
          onFocusChange={[Function]}
          onNextMonthClick={[Function]}
          onPrevMonthClick={[Function]}
          openDirection="down"
          orientation="horizontal"
          phrases={
            Object {
              "calendarLabel": "Calendar",
              "chooseAvailableEndDate": [Function],
              "chooseAvailableStartDate": [Function],
              "clearDates": "Clear Dates",
              "closeDatePicker": "Close",
              "dateIsSelected": [Function],
              "dateIsSelectedAsEndDate": [Function],
              "dateIsSelectedAsStartDate": [Function],
              "dateIsUnavailable": [Function],
              "enterKey": "Enter key",
              "escape": "Escape key",
              "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
              "homeEnd": "Home and end keys",
              "jumpToNextMonth": "Move forward to switch to the next month.",
              "jumpToPrevMonth": "Move backward to switch to the previous month.",
              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardShortcuts": "Keyboard Shortcuts",
              "leftArrowRightArrow": "Right and left arrow keys",
              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
              "moveFocusByOneMonth": "Switch months.",
              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
              "openThisPanel": "Open this panel.",
              "pageUpPageDown": "page up and page down keys",
              "questionMark": "Question mark",
              "returnFocusToInput": "Return to the date input field.",
              "roleDescription": "datepicker",
              "selectFocusedDate": "Select the date in focus.",
              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
              "upArrowDownArrow": "up and down arrow keys",
            }
          }
          readOnly={false}
          regular={false}
          renderCalendarInfo={null}
          renderDayContents={null}
          renderMonthElement={null}
          renderMonthText={null}
          renderNavNextButton={null}
          renderNavPrevButton={null}
          renderWeekHeaderElement={null}
          reopenPickerOnClearDates={false}
          required={false}
          screenReaderInputMessage=""
          showClearDates={false}
          showDefaultInputIcon={false}
          small={false}
          startDate={null}
          startDateId="mock-id-1"
          startDatePlaceholderText="Start Date"
          verticalHeight={null}
          verticalSpacing={22}
          weekDayFormat="dd"
          withFullScreenPortal={false}
          withPortal={false}
        />
        <label
          className="form__item--color"
        >
          Choose 
          proyect
           color:
          <input
            onChange={[Function]}
            type="color"
            value="#87cefa"
          />
        </label>
        <textarea
          className="form__item--description"
          onChange={[Function]}
          placeholder="Description"
          value=""
        />
        <input
          className="form__item--submit button"
          type="submit"
          value="Save proyect"
        />
      </div>
    </form>
  </div>
</section>
`;

exports[`should render Proyect Form with proyect data: should match snapshot 1`] = `
<section>
  <div
    className="container"
  >
    <form
      className="form"
      onSubmit={[Function]}
    >
      <div
        className="form__wrapper"
      >
        <input
          className="form__item--name"
          onChange={[Function]}
          placeholder="Name"
          required={true}
          type="text"
          value="Proyect 1"
        />
        <select
          className="form__item--status"
          onChange={[Function]}
          required={true}
          style={
            Object {
              "flexBasis": "48%",
              "marginRight": "4%",
            }
          }
          value="todo"
        >
          <option
            defaultValue={true}
            value=""
          >
            Select status
          </option>
          <option
            value="todo"
          >
            To do
          </option>
          <option
            value="doing"
          >
            Doing
          </option>
          <option
            value="done"
          >
            Done
          </option>
        </select>
        <input
          className="form__item--invoice"
          onChange={[Function]}
          placeholder="Invoice"
          type="number"
          value="100"
        />
        <withStyles(DateRangePicker)
          anchorDirection="left"
          appendToBody={false}
          block={false}
          calendarInfoPosition="bottom"
          customArrowIcon={null}
          customCloseIcon={null}
          customInputIcon={null}
          dayPickerNavigationInlineStyles={null}
          daySize={39}
          disableScroll={false}
          disabled={false}
          displayFormat={[Function]}
          enableOutsideDays={false}
          endDate={"2021-03-18T23:00:00.000Z"}
          endDateId="mock-id-2"
          endDatePlaceholderText="End Date"
          firstDayOfWeek={null}
          focusedInput={null}
          hideKeyboardShortcutsPanel={false}
          horizontalMargin={0}
          initialVisibleMonth={null}
          inputIconPosition="before"
          isDayBlocked={[Function]}
          isDayHighlighted={[Function]}
          isOutsideRange={[Function]}
          isRTL={false}
          keepFocusOnInput={false}
          keepOpenOnDateSelect={false}
          minimumNights={1}
          monthFormat="MMMM YYYY"
          navNext={null}
          navPosition="navPositionTop"
          navPrev={null}
          noBorder={false}
          numberOfMonths={1}
          onClose={[Function]}
          onDatesChange={[Function]}
          onFocusChange={[Function]}
          onNextMonthClick={[Function]}
          onPrevMonthClick={[Function]}
          openDirection="down"
          orientation="horizontal"
          phrases={
            Object {
              "calendarLabel": "Calendar",
              "chooseAvailableEndDate": [Function],
              "chooseAvailableStartDate": [Function],
              "clearDates": "Clear Dates",
              "closeDatePicker": "Close",
              "dateIsSelected": [Function],
              "dateIsSelectedAsEndDate": [Function],
              "dateIsSelectedAsStartDate": [Function],
              "dateIsUnavailable": [Function],
              "enterKey": "Enter key",
              "escape": "Escape key",
              "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
              "homeEnd": "Home and end keys",
              "jumpToNextMonth": "Move forward to switch to the next month.",
              "jumpToPrevMonth": "Move backward to switch to the previous month.",
              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardShortcuts": "Keyboard Shortcuts",
              "leftArrowRightArrow": "Right and left arrow keys",
              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
              "moveFocusByOneMonth": "Switch months.",
              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
              "openThisPanel": "Open this panel.",
              "pageUpPageDown": "page up and page down keys",
              "questionMark": "Question mark",
              "returnFocusToInput": "Return to the date input field.",
              "roleDescription": "datepicker",
              "selectFocusedDate": "Select the date in focus.",
              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
              "upArrowDownArrow": "up and down arrow keys",
            }
          }
          readOnly={false}
          regular={false}
          renderCalendarInfo={null}
          renderDayContents={null}
          renderMonthElement={null}
          renderMonthText={null}
          renderNavNextButton={null}
          renderNavPrevButton={null}
          renderWeekHeaderElement={null}
          reopenPickerOnClearDates={false}
          required={false}
          screenReaderInputMessage=""
          showClearDates={false}
          showDefaultInputIcon={false}
          small={false}
          startDate={"2021-03-14T23:00:00.000Z"}
          startDateId="mock-id-1"
          startDatePlaceholderText="Start Date"
          verticalHeight={null}
          verticalSpacing={22}
          weekDayFormat="dd"
          withFullScreenPortal={false}
          withPortal={false}
        />
        <label
          className="form__item--color"
        >
          Choose 
          proyect
           color:
          <input
            onChange={[Function]}
            type="color"
            value="green"
          />
        </label>
        <textarea
          className="form__item--description"
          onChange={[Function]}
          placeholder="Description"
          value="This is my proyect fixure 1"
        />
        <input
          className="form__item--submit button"
          type="submit"
          value="Save proyect"
        />
      </div>
    </form>
  </div>
</section>
`;
